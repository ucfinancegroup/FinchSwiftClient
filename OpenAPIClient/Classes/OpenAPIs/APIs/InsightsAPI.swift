//
// InsightsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class InsightsAPI {
    /**
     Dismiss an insight
     
     - parameter id: (path) Numeric ID of the Insight to dismiss 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func dismissInsight(id: Int, completion: @escaping ((_ data: Insight?,_ error: Error?) -> Void)) {
        dismissInsightWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Dismiss an insight
     - PUT /insight/{id}/dismiss
     - API Key:
       - type: apiKey finch-sid 
       - name: sidCookie
     - parameter id: (path) Numeric ID of the Insight to dismiss 
     - returns: RequestBuilder<Insight> 
     */
    open class func dismissInsightWithRequestBuilder(id: Int) -> RequestBuilder<Insight> {
        var path = "/insight/{id}/dismiss"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Insight>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get all a user's (non-dismissed) insights
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getInsights(completion: @escaping ((_ data: [Insight]?,_ error: Error?) -> Void)) {
        getInsightsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     Get all a user's (non-dismissed) insights
     - GET /insights
     - API Key:
       - type: apiKey finch-sid 
       - name: sidCookie
     - returns: RequestBuilder<[Insight]> 
     */
    open class func getInsightsWithRequestBuilder() -> RequestBuilder<[Insight]> {
        let path = "/insights"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Insight]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
