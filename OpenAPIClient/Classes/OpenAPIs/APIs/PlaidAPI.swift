//
// PlaidAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class PlaidAPI {
    /**
     to request link token for PlaidLink
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func plaidLink(completion: @escaping ((_ data: LinkTokenCreateResponse?,_ error: Error?) -> Void)) {
        plaidLinkWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     to request link token for PlaidLink
     - POST /plaid/link_token
     - API Key:
       - type: apiKey finch-sid 
       - name: sidCookie
     - returns: RequestBuilder<LinkTokenCreateResponse> 
     */
    open class func plaidLinkWithRequestBuilder() -> RequestBuilder<LinkTokenCreateResponse> {
        let path = "/plaid/link_token"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<LinkTokenCreateResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     For after a user does PlaidLink thru client
     
     - parameter publicTokenExchangeRequest: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func plaidLinkAccess(publicTokenExchangeRequest: PublicTokenExchangeRequest, completion: @escaping ((_ data: ItemIdResponse?,_ error: Error?) -> Void)) {
        plaidLinkAccessWithRequestBuilder(publicTokenExchangeRequest: publicTokenExchangeRequest).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     For after a user does PlaidLink thru client
     - POST /plaid/public_token_exchange
     - API Key:
       - type: apiKey finch-sid 
       - name: sidCookie
     - parameter publicTokenExchangeRequest: (body)  
     - returns: RequestBuilder<ItemIdResponse> 
     */
    open class func plaidLinkAccessWithRequestBuilder(publicTokenExchangeRequest: PublicTokenExchangeRequest) -> RequestBuilder<ItemIdResponse> {
        let path = "/plaid/public_token_exchange"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: publicTokenExchangeRequest)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<ItemIdResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
